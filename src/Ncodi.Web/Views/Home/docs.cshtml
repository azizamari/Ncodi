@{

}
<link href="~/css/docs.css" rel="stylesheet" />
<link href="~/css/prism.css" rel="stylesheet" />
<section class="docs">
    <h2>Table Of Content</h2>
    <h3>Getting Started</h3>
    <a href="#install" class="link">Installation</a>
    <br />
    <a href="#hello" class="link">Hello World</a>
    <br />
    <h3>Variables</h3>
    <a href="#variables" class="link">Variables</a>
    <br />
    <h3>Types</h3>
    <a href="#int" class="link">Int</a>
    <br />
    <a href="#dec" class="link">Decimal</a>
    <br />
    <a href="#str" class="link">String</a>
    <br />
    <a href="#bool" class="link">Bool</a>
    <br />
    <a href="#declare" class="link">Type Declaration</a>
    <br />
    <a href="#conver" class="link">Type conversion</a>
    <br />
    <h3>Operators</h3>
    <a href="#arith" class="link">Arithmetic</a>
    <br />
    <a href="#comp" class="link">Comparison</a>
    <br />
    <a href="#logic" class="link">Logical</a>
    <br />
    <h3>Conditionals</h3>
    <a href="#cond_nor" class="link">Normal</a>
    <br />
    <a href="#cond_nested" class="link">Nested</a>
    <br />
    <h3>Loops</h3>
    <a href="#men" class="link">men ... ila loop</a>
    <br />
    <a href="#madem" class="link">madem loop</a>
    <br />
    <a href="#dir" class="link">dir ... madem loop</a>
    <br />
    <h3>Functions</h3>
    <a href="#call" class="link">Calling functions</a>
    <br />
    <a href="#built" class="link">Built-in functions</a>
    <br />
    <a href="#define" class="link">Defining functions</a>
    <br />
    <h2>Documentation</h2>
    <h3>Getting Started</h3>
    <h4>Installation</h4>
    <h5>Windows Installation</h5>
    <ol>
        <li>
            Download the following file in your desired folder
            <a href="https://github.com/azizamari/Ncodi/blob/master/src/Ncodi.Web/setup/ncodi.exe?" target="_blank" class="download">Download</a>
        </li>
        <ul>
            Update your path
                <li>
                    From the Start search bar, enter ‘env’ and select Edit environment variables for your account.
                </li>
                <li>
                    Under User variables check if there is an entry called Path:    
                </li>
                <li>
                    If the entry exists, append the full path to desiredNcodiFolder\ using ; as a separator from existing values.
                    If the entry doesn’t exist, create a new user variable named Path with the full path to desiredNcodiFolder\ as its value
                </li>
        </ul>
    </ol>
    <h5>Linux Installation</h5>
        Coming soon...
    <span class="anchor" id="hello"></span>
    <h4>Hello World</h4>
    <p>
        If you want to print something to the console you simply have to call the function ekteb("something")
        @* code snippet here *@
        <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
            <input hidden type="text" name="code" value="ekteb(&quot;Hello, Tunisia!&quot;)" />
            <input class="tryIt" type="submit" value="Try It" />
        </form>
    <p class="code">
        ekteb(<span class="token string">"Hello, Tunisia!"</span>)
    </p>
    </p>
    <span class="anchor" id="variables"></span>
    <h3>Variables</h3>
    <p>
        We use variables to store data and use it later on. You can think of variables as containers that have a name and a value.
        @* code snippet here *@
        <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
            <textarea hidden name="code">var x = "Hello again" ekteb(x)</textarea>
            <input class="tryIt" type="submit" value="Try It" />
        </form>
    <p class="code">
        <span class="token keyword">var</span> x = <span class="token string">"Hello again"</span><br />
        ekteb(x)
    </p>
    There is also constant "const" variables which once declared you can't change their value.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">const x= "No Name"
x="Ncodi"
"That will result in an error"
"Meanwhile this is fine"
var y="45"
y="60"</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token keyword">const</span> x= <span class="token string">"No Name"</span><br />
        x=<span class="token string">"Ncodi"</span><br />
        <span class="token string">"That will result in an error"</span><br />
        <span class="token string">"Meanwhile this is fine"</span><br />
        <span class="token keyword">var</span> y=<span class="token string">"45"</span><br />
        y=<span class="token string">"60"</span>
    </p>
    </p>
    <h3>Types</h3>
    <p>
        In Ncodi we have several data types.
        <span class="anchor" id="int"></span>
        <h4>Int</h4>
        They are numeric values that can only contain digits from [0,1,2,3,4,5,6,7,8,9]. This can also be negative like -15.
        @* code snippet here *@
        <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
            <textarea hidden name="code">var num1 = 458
var num2 = 15
ekteb(num1+num2)</textarea>
            <input class="tryIt" type="submit" value="Try It" />
        </form>
    <p class="code">
        <span class="token keyword">var</span> num1 = 458<br />
        <span class="token keyword">var</span> num2 = 15<br />
        ekteb(num1+num2)
    </p>
    <span class="anchor" id="dec"></span>
    <h4>Decimal</h4>
    Decimals are numbers that have a floating point like 2.56 or 1.0
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">var dec = 4.25
ekteb(dec)</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token keyword">var</span> dec = 4.25<br />
        ekteb(dec)
    </p>

    <span class="anchor" id="str"></span>
    <h4>String</h4>
    In computer programming, a string is traditionally a sequence of characters,    
    in other words
    Strings are basically textual data. You must use quotation marks "" to indicate that it's a string.
    <a href="https://en.m.wikipedia.org/wiki/String_(computer_science)#:~:text=In%20computer%20programming%2C%20a%20string,as%20some%20kind%20of%20variable.&text=In%20formal%20languages%2C%20which%20are,a%20set%20called%20an%20alphabet.">
        learn more about strings
    </a>
@* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">var s="Code in your own words"
var x="51"
"x is not an Int it's a string"
ekteb(s)</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token keyword">var</span> s=<span class="token string">"Code in your own words"</span><br />
        <span class="token keyword">var</span> x=<span class="token string">"51"</span><br />
        <span class="token string">"x is not an Int it's a string"</span><br />
        ekteb(s)
    </p>

    <span class="anchor" id="bool"></span>
    <h4>Bool</h4>
    Boolean values can be either true/ s7i7 or false/ ghalet.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">var res=s7i7
var nope=ghalet
ekteb(res)</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token keyword">var</span> res=<span class="token keyword">s7i7</span><br />
        <span class="token keyword">var</span> nope=<span class="token keyword">ghalet</span><br />
        ekteb(res)
    </p>

    <span class="anchor" id="declare"></span>
    <h4>Optional Type Declaration</h4>
    You also can specify the type of a variable when declaring it. This is mainly to make your code more clear since Ncodi can dynamically detect variable types. If you declare a variable as int and then assign to it a boolean value you will get an error.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">var num:int=1564
                                     var dec:decimal=1.5
                                     var really:bool=ghalet
                                     var esmi:string="Aziz Amari"
                "This will cause an error because 16.5 isn't an int"
                                     var age:int=16.5</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token keyword">var</span> num:int=1564<br />
        <span class="token keyword">var</span> dec:decimal=1.5<br />
        <span class="token keyword">var</span> really:bool=<span class="token keyword">ghalet</span><br />
        <span class="token keyword">var</span> esmi:string=<span class="token string">"Aziz Amari"</span><br />
        <span class="token string">"This will cause an error because 16.5 isn't an int"</span><br />
        <span class="token keyword">var</span> age:int=16.5
    </p>
    <span class="anchor" id="arith"></span>
    <h3>Operators</h3>
    <h4>Arithmetic</h4>
    -Plus operator '+'<br />
    -Minus operator '-'<br />
    -Multiply operator '*'<br />
    -Division operator '/'<br />
    -Euclidian Division operator '//'<br />
    -Modulo operator '%'<br />
    -Power operator '**'<br />
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">"Plus operator '+'"
"With strings: concatinates them"
ekteb("Ncodi" + " "+ "Beta Version")
"With numbers"
ekteb(598+18)
ekteb(15.5+0.5)
ekteb(0.5+1)

"Minus operator '-'"
ekteb(546-56)
ekteb(12.5-0.5-2)

"Multiply operator '*'"
ekteb(2*0.5*5)
"Power operator '**'"
ekteb(2**8)

"Division operator '/'"
ekteb(5/2)
"Euclidian division '//' ignores the rest"
ekteb(5/2)
"Modulo operator '%' returns the rest"
ekteb(5%2)</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token string">"Plus operator '+'"</span><br />
        <span class="token string">"With strings: concatinates them"</span><br />
        ekteb(<span class="token string">"Ncodi"</span> + <span class="token string">" "</span>+ <span class="token string">"Beta Version"</span>)<br /><span class="token string">"With numbers"</span><br />
        ekteb(598+18)<br />
        ekteb(15.5+0.5)<br />
        ekteb(0.5+1)<br /><br /><span class="token string">"Minus operator '-'"</span><br />
        ekteb(546-56)<br />
        ekteb(12.5-0.5-2)<br /><br />
        <span class="token string">"Multiply operator '*'"</span><br />
        ekteb(2*0.5*5)<br />
        <span class="token string">"Power operator '**'"</span><br />
        ekteb(2**8)<br /><br />
        <span class="token string">"Division operator '/'"</span><br />
        ekteb(5/2)<br />
        <span class="token string">"Euclidian division '//' ignores the rest"</span><br />
        ekteb(5/2)<br />
        <span class="token string">"Modulo operator '%' returns the rest"</span><br />
        ekteb(5%2)
    </p>
    <span class="anchor" id="comp"></span>
    <h4>Comparison</h4>
    -Greater operator '>'<br />
    -Greater or Equal operator >=<br />
    -Less or Equal operator <=<br />
    -Is Equal operator '=='<br />
    -Is Different operator '!='<br />
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">"This returns either s7i7 or ghalet"
"Numbers"
ekteb(12.6<10) ekteb(12.6>10)

ekteb(9 > 9)
ekteb(9 >= 9)
ekteb(12 <= 50)

"Equality and difference"
ekteb(9==4)
ekteb(4==4)
ekteb(9!=4)

"String: uses Ascii/ alphabet order to compare"
ekteb("a" < "b")
ekteb("Ncodi" > "Python")
ekteb("aziz" != "AZIZ")

"Bools only != and =="
ekteb(false==false)
ekteb(true!=false)</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token string">"This returns either <span class="token keyword">s7i7</span> or <span class="token keyword">ghalet</span>"</span><br />
        <span class="token string">"Numbers"</span><br />
        ekteb(12.6&lt;10) ekteb(12.6&gt;10)<br /><br />
        ekteb(9 &gt; 9)<br />
        ekteb(9 &gt;= 9)<br />
        ekteb(12 &lt;= 50)<br /><br />
        <span class="token string">"Equality and Difference"</span><br />
        ekteb(9==4)<br />
        ekteb(4==4)<br />
        ekteb(9!=4)<br /><br />
        <span class="token string">"String: uses Ascii/ alphabet order <span class="token keyword">to</span> compare"</span><br />
        ekteb(<span class="token string">"a"</span> &lt; <span class="token string">"b"</span>)<br />
        ekteb(<span class="token string">"Ncodi"</span> &gt; <span class="token string">"Python"</span>)<br />
        ekteb(<span class="token string">"aziz"</span> != <span class="token string">"AZIZ"</span>)<br /><br />
        <span class="token string">"Bools only != and =="</span><br />
        ekteb(<span class="token keyword">false</span>==<span class="token keyword">false</span>)<br />
        ekteb(<span class="token keyword">true</span>!=<span class="token keyword">false</span>)
    </p>
    @* code snippet here *@
    <span class="anchor" id="logic"></span>
    <h4>Logical</h4>
    -And operator '&&'<br />
    -Or operator '||'<br />
    -Inverse operator '!'
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">"AND operator && only returns s7i7 when both conditions are s7i7"
ekteb(5>2&&10!=15)
ekteb(5>2&&10==15)
ekteb(s7i7 || ghalet)

"OR operator || only returns s7i7 when atleast one of the conditions is s7i7"
ekteb(5%2==1 || ghalet)
ekteb(s7i7 || s7i7)
ekteb(ghalet || ghalet)

"NO operator ! inverses the condition s7i7 becomes ghalet and vice versa"
ekteb(!ghalet)
ekteb(!(5==2))</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token string">"AND operator &amp;&amp; only returns <span class="token keyword">s7i7</span> when both conditions are <span class="token keyword">s7i7</span>"</span><br />
        ekteb(5&gt;2&amp;&amp;10!=15)<br />
        ekteb(5&gt;2&amp;&amp;10==15)<br />
        ekteb(<span class="token keyword">s7i7</span> || <span class="token keyword">ghalet</span>)<br /><br />
        <span class="token string">"OR operator || only returns <span class="token keyword">s7i7</span> when atleast one of the conditions is <span class="token keyword">s7i7</span>"</span><br />
        ekteb(5%2==1 || <span class="token keyword">ghalet</span>)<br />
        ekteb(<span class="token keyword">s7i7</span> || <span class="token keyword">s7i7</span>)<br />
        ekteb(<span class="token keyword">ghalet</span> || <span class="token keyword">ghalet</span>)<br /><br />
        <span class="token string">"NO operator ! inverses the condition <span class="token keyword">s7i7</span> becomes <span class="token keyword">ghalet</span> and vice versa"</span><br />
        ekteb(!<span class="token keyword">ghalet</span>)<br />
        ekteb(!(5==2))
    </p>



    <h3>Conditionals</h3>
    <span class="anchor" id="cond_nor"></span>
    <h4>Normal</h4>
    Conditionals are a crucial part of any programming language. They tell the programm to do something IF a condition is met OTHERWISE do something else.
    If you want to print something to the console you simply have to call the funciton ekteb("something")
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">
"Make sure you enter a number here"

var x:int = int(a9ra())
kan x % 2 ==0{
    ekteb(string(x)+" is an even number")
}
wela{
    ekteb(string(x)+" is and odd number")
}
</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token string">"Make sure you enter a number here"</span><br /><br />
        <span class="token keyword">var</span> x:int = int(a9ra())<br />
        <span class="token keyword">kan</span> x % 2 ==0{<br />
        &nbsp;&nbsp;ekteb(string(x)+<span class="token string">" is an even number"</span>)<br />
        }<br />
        <span class="token keyword">wela</span>{<br />
        &nbsp;&nbsp;ekteb(string(x)+<span class="token string">" is and odd number"</span>)<br />
        }<br />
    </p>
    <span class="anchor" id="cond_nested"></span>
    <h4>Nested</h4>
    You can also nest conditions to get more control.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">
var language=a9ra()
kan language=="ncodi"{
  ekteb("Great Language")
}
wela kan language == "python"{
  ekteb("Mehh !")
}
wela{
  ekteb("I don't know this language yet: " +language)
}
</textarea>
        <input class="tryIt" type="submit" value="Try It" />

    </form>
    <p class="code">
        <span class="token keyword">var</span> language=a9ra()<br />
        <span class="token keyword">kan</span> language==<span class="token string">"ncodi"</span>{<br />
        &nbsp;&nbsp;ekteb(<span class="token string">"Great Language"</span>)<br />
        }<br />
        <span class="token keyword">wela</span> <span class="token keyword">kan</span> language == <span class="token string">"python"</span>{<br />
        &nbsp;&nbsp;ekteb(<span class="token string">"Mehh !"</span>)<br />
        }<br />
        <span class="token keyword">wela</span>{<br />
        &nbsp;&nbsp;ekteb(<span class="token string">"I don't know this language yet: "</span> +language)<br />
        }
    </p>
    <h3>Loops</h3>
    Loops are very useful whenever you have to repeat some instructions a number of times.
        <a href="https://en.wikipedia.org/wiki/For_loop">Learn more about loops</a>
    <span class="anchor" id="men"></span>
    <h4>men ... ila loop</h4>
    This allows you to repeat something many times and also have a counter variable to keep count of current state.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">
"Write all numbers in the interval 0-10"
men num = 0 ila 10{
  ekteb(num)
}

"Draw a pyramid"
var rows = 5
men i = 1 ila rows{
  var line=""
  men j = 1 ila i{
    line=line+string(j)+" "
  }
  ekteb(line)
}</textarea>
        <input class="tryIt" type="submit" value="Try It" />

    </form>
    <p class="code">
        <span class="token string">"Write all numbers in the interval 0-10"</span><br />
        <span class="token keyword">men</span> num = 0 <span class="token keyword">ila</span> 10{<br />
        &nbsp;&nbsp;ekteb(num)<br />
        }<br />
        <span class="token string">"Draw a pyramid"</span><br /><br />
        <span class="token keyword">var</span> rows = 5<br />
        <span class="token keyword">men</span> i = 1 <span class="token keyword">ila</span> rows{<br />
        &nbsp;&nbsp;<span class="token keyword">var</span> line=<span class="token string">""</span><br />
        &nbsp;&nbsp;<span class="token keyword">men</span> j = 1 <span class="token keyword">ila</span> i{<br />
        &nbsp;&nbsp;&nbsp;&nbsp;line=line+string(j)+<span class="token string">" "</span><br />
        &nbsp;&nbsp;}<br />
        &nbsp;&nbsp;ekteb(line)<br />
        }
    </p>
    <span class="anchor" id="madem"></span>
    <h4>madem loop</h4>
    This allows you to keep repeating something until a condition is met.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">
ekteb("A3tini a7sen programming language:")
var lang = a9ra()
madem ( lang!="ncodi" && lang!="Ncodi"){
  ekteb("Wrong think again")
  lang=a9ra()
}
ekteb("YES")</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        ekteb(<span class="token string">"A3tini a7sen programming language:"</span>)<br />
        <span class="token keyword">var</span> lang = a9ra()<br />
        <span class="token keyword">madem</span> ( lang!=<span class="token string">"ncodi"</span> &amp;&amp; lang!=<span class="token string">"Ncodi"</span>){<br />
        &nbsp;&nbsp;ekteb(<span class="token string">"Wrong think again"</span>)<br />
        &nbsp;&nbsp;lang=a9ra()<br />
        }<br />
        ekteb(<span class="token string">"YES"</span>)
    </p>
    <span class="anchor" id="dir"></span>
    <h4>dir...madem loop</h4>
    This loop is similar to the previous one madem except we check the condition after executing at least once meanwhile in dir...madem we check the condition before even starting.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">
"This will run once"

var lang="python"
dir{
  ekteb(lang)
}madem lang!="python"

"This won't even run"
madem(lang!="python"){
  ekteb(lang)
}</textarea>
        <input class="tryIt" type="submit" value="Try It" />

    </form>
    <p class="code">
        <span class="token string">"This will run once"</span><br /><br />
        <span class="token keyword">var</span> lang=<span class="token string">"python"</span><br />
        <span class="token keyword">dir</span>{<br />
        ekteb(lang)<br />
        }<span class="token keyword">madem</span> lang != <span class="token string"> "python"</span><br /><br />
        <span class="token string">"This won't even run"</span><br />
        <span class="token keyword">madem</span>( lang != <span class="token string"> "python" </span> ){<br />
        ekteb(lang)<br />
        }
    </p>


    <h3>Functions</h3>
    <p>
        In Ncodi we have several data types.
        <span class="anchor" id="call"></span>
        <h4>Calling functions</h4>
        A function is like a magic box: you give it some input it perfoms THE MAGIC and gives you back a result. each function has a name, optional parameters/ options and a return type. A function call is in the following form functionName(param1, param2,....).
        @* code snippet here *@
        <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
            <textarea hidden name="code">"Function 'ekteb' call that has one parameter => the desired output"
ekteb("output")

"We call the function len that gives us back the number of characters in a string"
ekteb(len("aziz"))
var x="Ncodi code in your own language"
ekteb("Length: "+string(len(x)))</textarea>
            <input class="tryIt" type="submit" value="Try It" />
        </form>
    <p class="code">
        <span class="token string">"Function 'ekteb' call that has one parameter =&gt; the desired output"</span><br />
        ekteb(<span class="token string">"output"</span>)<br /><br />
        <span class="token string">"We call the function len that gives us back the number of characters in a string"</span><br />
        ekteb(len(<span class="token string">"aziz"</span>))<br />
        <span class="token keyword">var</span> x=<span class="token string">"Ncodi code in your own language"</span><br />
        ekteb(<span class="token string">"Length: "</span>+string(len(x)))
    </p>
    <span class="anchor" id="built"></span>
    <h4>Built-in functions</h4>
    We have a lot of built-in functions in Ncodi.
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">"ekteb: it prints whatever you write on the screen"
ekteb("Hello ncodi users")

"a9ra: it asks you input/ prompt a sentence"
ekteb("Do you like Ncodi ?")
var x=a9ra()

"sqrt: it returns the square root of a given number"
var s=sqrt(16)
ekteb(s)

"random: you give a max number and it will give random number from 0-max"
ekteb(random(10))
"Interval not starting from 0 instead from 20: 20-35"
ekteb(random(15)+20)

"ord: you give it a single character and it will convert it in ASCII code"
ekteb(ord("A"))
"chr: is the inverse of ord"
ekteb(chr(70))
ekteb(chr(ord("B")))</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token string">"ekteb: it prints whatever you write on the screen"</span><br />
        ekteb(<span class="token string">"Hello ncodi users"</span>)<br /><br />
        <span class="token string">"a9ra: it asks you input/ prompt a sentence"</span><br />
        ekteb(<span class="token string">"Do you like Ncodi ?"</span>)<br />
        <span class="token keyword">var</span> x=a9ra()<br /><br />
        <span class="token string">"sqrt: you give it a number and it will give you it's square root"</span><br />
        <span class="token keyword">var</span> s=sqrt(16)<br />
        ekteb(s)<br /><br />
        <span class="token string">"random: you give a max number and it will give random number from 0-max"</span><br />
        ekteb(random(10))<br />
        <span class="token string">"Interval not starting from 0 instead from 20: 20-35"</span><br />
        ekteb(random(15)+20)<br /><br />
        <span class="token string">"ord: you give it a single character and it will convert it in ASCII code"</span><br />
        ekteb(ord(<span class="token string">"A"</span>))<br />
        <span class="token string">"chr: is the inverse of ord"</span><br />
        ekteb(chr(70))<br />
        ekteb(chr(ord(<span class="token string">"B"</span>)))
    </p>
    <span class="anchor" id="define"></span>
    <h4>Defining functions</h4>
    We create functions by using asne3 keyword then giving a name to it and we type the desired parameters and their type
    @* code snippet here *@
    <form method="post" asp-controller="playground" asp-action="TryCodeBtn">
        <textarea hidden name="code">"Function with no returned value"
asne3 hey(){
  ekteb("Hello from ncodi servers")
}

"Function with parameters and no returned value"
asne3 greet(name:string, times:int){
  men i = 0 ila times{
    ekteb("Hello "+ name+" "+string(i))
  }
}

"Function with returned value and parameters"
asne3 pow(n:int, p:int):int{
  raje3 n**p
}

"Calling them"
hey()
greet("Aziz Amari",4)
var x= pow(2,8)
ekteb(x)</textarea>
        <input class="tryIt" type="submit" value="Try It" />
    </form>
    <p class="code">
        <span class="token string">"Function with no returned value"</span><br />
        <span class="token keyword">asne3</span> hey(){<br />
        &nbsp;&nbsp;ekteb(<span class="token string">"Hello from ncodi servers"</span>)<br />
        }<br /><br />
        <span class="token string">"Function with parameters and no returned value"</span><br />
        <span class="token keyword">asne3</span> greet(name:string, times:int){<br />
        &nbsp;&nbsp;<span class="token keyword">men</span> i = 0 <span class="token keyword">ila</span> times{<br />
        &nbsp;&nbsp;&nbsp;&nbsp;ekteb(<span class="token string">"Hello "</span>+ name+<span class="token string">" "</span>+string(i))<br />
        &nbsp;&nbsp;}<br />
        }<br /><br />
        <span class="token string">"Function with returned value and parameters"</span><br />
        <span class="token keyword">asne3</span> pow(n:int, p:int):int{<br />
        &nbsp;&nbsp;<span class="token keyword">raje3</span> n**p<br />
        }<br /><br />
        <span class="token string">"Calling them"</span><br />
        hey()<br />
        greet(<span class="token string">"Aziz Amari"</span>,4)<br />
        <span class="token keyword">var</span> x= pow(2,8)<br />
        ekteb(x)
    </p>
</section>
